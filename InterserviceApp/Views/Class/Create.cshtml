@model InterserviceApp.Models.is_Class

@{
    ViewBag.Title = "Create";
}

<head>
<script>
    function yesnoCheck() {
        if (document.getElementById('Physical').checked) {
            document.getElementById('phys').style.display = 'block';
            document.getElementById('black').style.display = 'none';

        } else {
            document.getElementById('phys').style.display = 'none';
            document.getElementById('black').style.display = 'block';

        }
    }
</script>
</head>
<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    <!--Html.ValidationSummary(true, "", new { class = "text-danger" }) -->

    Physical <input type="radio" onclick="yesnoCheck();" name="physblack" id="Physical" value="Physical" /> Blackboard 
    <input type="radio" onclick="yesnoCheck();" name="physblack" id="Blackboard" value="Blackboard"/><br>

    <div id="phys" style="display:none">
        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.room, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.room, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.room, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.capacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.capacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.capacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.justification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.justification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.justification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fees, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div id="black" style="display:none">
        <div class="form-group">
            @Html.LabelFor(model => model.hyperlink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hyperlink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hyperlink, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.courseID, "courseID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("courseID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.courseID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
