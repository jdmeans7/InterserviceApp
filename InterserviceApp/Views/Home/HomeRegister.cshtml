@model IEnumerable<InterserviceApp.Models.is_Class>

@{
    ViewBag.Title = "HomeRegister";
}

<head>
    <link href="~/Content/home.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/classportal.css" rel="stylesheet" type="text/css" />
</head>

<script>
    function divTurn(thisEle, cID, b) {
        if (b == "true") { return; } else {
            if (thisEle == cID && document.getElementById(thisEle).clientHeight == "40") {
                document.getElementById(thisEle).style.height = '200px';
                document.getElementById(thisEle).getElementsByClassName("middleBar")[0].style.display = 'inline-block';
            } else {
                document.getElementById(thisEle).style.height = '40px';
                document.getElementById(thisEle).getElementsByClassName("middleBar")[0].style.display = 'none';
            }
        }
    }

    function openInNewTab(url) {
        window.open(url, '_blank');
    }
</script>

<div class="classPortalNav">
    <span>Home Register</span>
</div>

<div class="currentContentClass currentContentCourse">
    <h2>Required Classes</h2>

     <div class="noteCont">
        <div class="bbClass"></div><span style="position: absolute; width: 200px; margin-left: 10px; margin-top: 3px;"> = Blackboard Classes</span>
        <div class="pClass"></div><span style="position: absolute; width: 200px; margin-left: 10px; margin-top: 3px;"> = Physical Classes</span>
    </div>

    <hr class="topHR" />

    <div class="reqClassContainer">
        @foreach (var item in Model)
        {
            if (item.blackboard != true)
            {
                <div class="reqClassDiv" onclick="divTurn(this.id, @item.classID, 'false');" id="@item.classID">

                <div class="topBar">
                    <p style="text-align:left;">
                        @Html.DisplayFor(modelItem => item.Course.desc) - @Html.DisplayFor(modelItem => item.Course.courseCode)                        
                        <span style="float:right;">Date: @Html.DisplayFor(modelItem => item.date)</span>
                    </p>
                </div>

                <div class="middleBar" id="middleBar">
                        <div class="dateContainer">
                            @Html.DisplayNameFor(model => model.date):
                            @Html.DisplayFor(modelItem => item.date)
                        </div>
                        <div class="startTimeContainer">
                            @Html.DisplayNameFor(model => model.startTime):
                            @Html.DisplayFor(modelItem => item.startTime)
                        </div>

                        <div class="roomContainer">
                            @Html.DisplayNameFor(model => model.room):
                            @Html.DisplayFor(modelItem => item.room)
                        </div>

                        <div class="capacityContainer">
                            @Html.DisplayNameFor(model => model.capacity):
                            @Html.DisplayFor(modelItem => item.capacity)
                        </div>

                        <div class="justificationContainer">
                            @Html.DisplayNameFor(model => model.justification):
                            @Html.DisplayFor(modelItem => item.justification)
                        </div>

                        <div class="feesContainer">
                            @Html.DisplayNameFor(model => model.fees):
                            @Html.DisplayFor(modelItem => item.fees)$
                        </div>
                        @Html.ActionLink("Register", "Register", new { id = item.classID }, new { @class = "btn btn-primary register" })
                    </div>
                </div>
            }
            else
            {
                <div class="reqClassDiv" onclick="divTurn(this.id, @item.classID, 'true');" id="@item.classID">
                    <div class="topBar" style="background-color:orangered" onclick="openInNewTab('@item.hyperlink')">
                        <p style="text-align:center;">
                            @Html.DisplayFor(modelItem => item.Course.desc) - @Html.DisplayFor(modelItem => item.Course.courseCode)
                        </p>
                    </div>
                </div>
            }
        }
    </div>


    @{
        Html.RenderAction("Classes", "Home");
    }
</div>
