@model IEnumerable<InterserviceApp.Models.is_Class>

<head>
    <link href="~/Content/home.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/tables.css" rel="stylesheet" type="text/css" />
</head>

<h2>Additional Classes</h2>

<hr class="topHR" />

<div class="reqClassContainer">
    @foreach (var item in Model)
    {
        if (item.blackboard != true)
        {
            <div class="reqClassDiv" onclick="divTurn(this.id, @item.classID, 'false');" id="@item.classID">

                <div class="topBar">
                    <p style="text-align:left;">
                        @Html.DisplayFor(modelItem => item.Course.desc) - @Html.DisplayFor(modelItem => item.Course.courseCode)
                        <span style="float:right;">Date: @Html.DisplayFor(modelItem => item.date)</span>
                    </p>
                </div>

                <div class="middleBar" id="middleBar">
                    <div class="dateContainer">
                        @Html.DisplayNameFor(model => model.date):
                        @Html.DisplayFor(modelItem => item.date)
                    </div>
                    <div class="startTimeContainer">
                        @Html.DisplayNameFor(model => model.startTime):
                        @Html.DisplayFor(modelItem => item.startTime)
                    </div>

                    <div class="roomContainer">
                        @Html.DisplayNameFor(model => model.room):
                        @Html.DisplayFor(modelItem => item.room)
                    </div>

                    <div class="capacityContainer">
                        @Html.DisplayNameFor(model => model.capacity):
                        @Html.DisplayFor(modelItem => item.capacity)
                    </div>

                    <div class="justificationContainer">
                        @Html.DisplayNameFor(model => model.justification):
                        @Html.DisplayFor(modelItem => item.justification)
                    </div>

                    <div class="feesContainer">
                        @Html.DisplayNameFor(model => model.fees):
                        @Html.DisplayFor(modelItem => item.fees)$
                    </div>
                    @Html.ActionLink("Register", "Register", new { id = item.classID }, new { @class = "btn btn-primary register" })
                </div>
            </div>
        }
        else
        {
            <div class="reqClassDiv" onclick="divTurn(this.id, @item.classID, 'true');" id="@item.classID">
                <div class="topBar" style="background-color:orangered" onclick="openInNewTab('@item.hyperlink')">
                    <p style="text-align:center;">
                        @Html.DisplayFor(modelItem => item.Course.desc) - @Html.DisplayFor(modelItem => item.Course.courseCode)
                    </p>
                </div>
            </div>
        }
    }
</div>